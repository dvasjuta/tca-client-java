/*
 * Turnitin Core API
 * Turnitin Core API (TCA) provides direct API access to the core functionality provided by Turnitin. TCA supports file submission, similarity report generation, group management, and visualization of report matches via Cloud Viewer or PDF download. Below is the full flow to successfully set up an integration scope, an API Key, and make calls to TCA. Integration Scope and API Key management is done via the Admin Console UI by logging in as an admin user. For more details, go to our [developer portal documentation page](https://developers.turnitin.com/docs). ## Integration Scope and API Key Management TCA API calls must provide an API Key for authentication, so you must first have at least one integration scope associated with at least one API Key to use TCA. ### Admin Console UI First, login to Admin Console UI as an *Admin* user with permission to create Integration Scopes, under a tenant that is licensed to use the TCA product Integration Scopes (you can create a new one, or add keys to existing)    * Click `Integrations` in the side bar --> `+ Add Integration` at top the top of the page --> Enter a name --> `Add` Button   API Keys   * Click `Integrations` in the side bar --> `Create API Key` Button next to a given Integration Scope -->   Enter a name --> click `Create and View button`   * Copy/Save the key manually or click save to clipboard button to copy it (this is the only time it will show)  ## TCA Flow    *  Register a webhook   *  Create a submission   *  Upload a file for the submission   *  Wait for the submission upload to process      * If you registered a webhook, a callback will be sent to it when upload is complete      * The status of the *submission* will also update to `COMPLETE`   *  Request a Similarity Report   *  Wait for similarity report to process      * If you registered a webhook, a callback will be sent to it when report is complete      * The status of the *report* will also be updated to `COMPLETE`   *  Request a URL with parameters to view the Similarity Report 
 *
 * The version of the OpenAPI document: 1.0.225
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.AuthorMetadataOverride;
import org.openapitools.client.model.Eula;
import org.openapitools.client.model.Sidebar;
import org.openapitools.client.model.SimilaritySettings;
import org.openapitools.client.model.ViewerPermissions;

/**
 * SimilarityViewerUrlSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-20T15:00:46.785538Z[Etc/UTC]")
public class SimilarityViewerUrlSettings {
  public static final String SERIALIZED_NAME_AUTHOR_METADATA_OVERRIDE = "author_metadata_override";
  @SerializedName(SERIALIZED_NAME_AUTHOR_METADATA_OVERRIDE)
  private AuthorMetadataOverride authorMetadataOverride;

  public static final String SERIALIZED_NAME_VIEWER_USER_ID = "viewer_user_id";
  @SerializedName(SERIALIZED_NAME_VIEWER_USER_ID)
  private String viewerUserId;

  /**
   * two character locale language setting (e.g. &#39;en&#39; or &#39;de&#39;) or full value
   */
  @JsonAdapter(LocaleEnum.Adapter.class)
  public enum LocaleEnum {
    AR_SA("ar-SA"),
    
    CS_CZ("cs-CZ"),
    
    DE_DE("de-DE"),
    
    EL_GR("el-GR"),
    
    EN_US("en-US"),
    
    ES_MX("es-MX"),
    
    FI_FI("fi-FI"),
    
    FR_FR("fr-FR"),
    
    IT_IT("it-IT"),
    
    JA_JP("ja-JP"),
    
    KO_KR("ko-KR"),
    
    NL_NL("nl-NL"),
    
    PL_PL("pl-PL"),
    
    PT_BR("pt-BR"),
    
    RO_RO("ro-RO"),
    
    RU_RU("ru-RU"),
    
    SV_SE("sv-SE"),
    
    TR_TR("tr-TR"),
    
    VI_VN("vi-VN"),
    
    ZH_CN("zh-CN"),
    
    ZH_TW("zh-TW");

    private String value;

    LocaleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LocaleEnum fromValue(String value) {
      for (LocaleEnum b : LocaleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LocaleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LocaleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LocaleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LocaleEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private LocaleEnum locale;

  public static final String SERIALIZED_NAME_VIEWER_DEFAULT_PERMISSION_SET = "viewer_default_permission_set";
  @SerializedName(SERIALIZED_NAME_VIEWER_DEFAULT_PERMISSION_SET)
  private String viewerDefaultPermissionSet;

  public static final String SERIALIZED_NAME_VIEWER_PERMISSIONS = "viewer_permissions";
  @SerializedName(SERIALIZED_NAME_VIEWER_PERMISSIONS)
  private ViewerPermissions viewerPermissions;

  public static final String SERIALIZED_NAME_EULA = "eula";
  @SerializedName(SERIALIZED_NAME_EULA)
  private Eula eula;

  public static final String SERIALIZED_NAME_SIDEBAR = "sidebar";
  @SerializedName(SERIALIZED_NAME_SIDEBAR)
  private Sidebar sidebar;

  public static final String SERIALIZED_NAME_SIMILARITY = "similarity";
  @SerializedName(SERIALIZED_NAME_SIMILARITY)
  private SimilaritySettings similarity;


  public SimilarityViewerUrlSettings authorMetadataOverride(AuthorMetadataOverride authorMetadataOverride) {
    
    this.authorMetadataOverride = authorMetadataOverride;
    return this;
  }

   /**
   * Get authorMetadataOverride
   * @return authorMetadataOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AuthorMetadataOverride getAuthorMetadataOverride() {
    return authorMetadataOverride;
  }


  public void setAuthorMetadataOverride(AuthorMetadataOverride authorMetadataOverride) {
    this.authorMetadataOverride = authorMetadataOverride;
  }


  public SimilarityViewerUrlSettings viewerUserId(String viewerUserId) {
    
    this.viewerUserId = viewerUserId;
    return this;
  }

   /**
   * viewer&#39;s user ID
   * @return viewerUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "viewer's user ID")

  public String getViewerUserId() {
    return viewerUserId;
  }


  public void setViewerUserId(String viewerUserId) {
    this.viewerUserId = viewerUserId;
  }


  public SimilarityViewerUrlSettings locale(LocaleEnum locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * two character locale language setting (e.g. &#39;en&#39; or &#39;de&#39;) or full value
   * @return locale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "two character locale language setting (e.g. 'en' or 'de') or full value")

  public LocaleEnum getLocale() {
    return locale;
  }


  public void setLocale(LocaleEnum locale) {
    this.locale = locale;
  }


  public SimilarityViewerUrlSettings viewerDefaultPermissionSet(String viewerDefaultPermissionSet) {
    
    this.viewerDefaultPermissionSet = viewerDefaultPermissionSet;
    return this;
  }

   /**
   * Default viewer permission set, accepts INSTRUCTOR, LEARNER, EDITOR, USER, APPLICANT, ADMINISTRATOR, UNDEFINED
   * @return viewerDefaultPermissionSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Default viewer permission set, accepts INSTRUCTOR, LEARNER, EDITOR, USER, APPLICANT, ADMINISTRATOR, UNDEFINED")

  public String getViewerDefaultPermissionSet() {
    return viewerDefaultPermissionSet;
  }


  public void setViewerDefaultPermissionSet(String viewerDefaultPermissionSet) {
    this.viewerDefaultPermissionSet = viewerDefaultPermissionSet;
  }


  public SimilarityViewerUrlSettings viewerPermissions(ViewerPermissions viewerPermissions) {
    
    this.viewerPermissions = viewerPermissions;
    return this;
  }

   /**
   * Get viewerPermissions
   * @return viewerPermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ViewerPermissions getViewerPermissions() {
    return viewerPermissions;
  }


  public void setViewerPermissions(ViewerPermissions viewerPermissions) {
    this.viewerPermissions = viewerPermissions;
  }


  public SimilarityViewerUrlSettings eula(Eula eula) {
    
    this.eula = eula;
    return this;
  }

   /**
   * Get eula
   * @return eula
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Eula getEula() {
    return eula;
  }


  public void setEula(Eula eula) {
    this.eula = eula;
  }


  public SimilarityViewerUrlSettings sidebar(Sidebar sidebar) {
    
    this.sidebar = sidebar;
    return this;
  }

   /**
   * Get sidebar
   * @return sidebar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Sidebar getSidebar() {
    return sidebar;
  }


  public void setSidebar(Sidebar sidebar) {
    this.sidebar = sidebar;
  }


  public SimilarityViewerUrlSettings similarity(SimilaritySettings similarity) {
    
    this.similarity = similarity;
    return this;
  }

   /**
   * Get similarity
   * @return similarity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SimilaritySettings getSimilarity() {
    return similarity;
  }


  public void setSimilarity(SimilaritySettings similarity) {
    this.similarity = similarity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimilarityViewerUrlSettings similarityViewerUrlSettings = (SimilarityViewerUrlSettings) o;
    return Objects.equals(this.authorMetadataOverride, similarityViewerUrlSettings.authorMetadataOverride) &&
        Objects.equals(this.viewerUserId, similarityViewerUrlSettings.viewerUserId) &&
        Objects.equals(this.locale, similarityViewerUrlSettings.locale) &&
        Objects.equals(this.viewerDefaultPermissionSet, similarityViewerUrlSettings.viewerDefaultPermissionSet) &&
        Objects.equals(this.viewerPermissions, similarityViewerUrlSettings.viewerPermissions) &&
        Objects.equals(this.eula, similarityViewerUrlSettings.eula) &&
        Objects.equals(this.sidebar, similarityViewerUrlSettings.sidebar) &&
        Objects.equals(this.similarity, similarityViewerUrlSettings.similarity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorMetadataOverride, viewerUserId, locale, viewerDefaultPermissionSet, viewerPermissions, eula, sidebar, similarity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimilarityViewerUrlSettings {\n");
    sb.append("    authorMetadataOverride: ").append(toIndentedString(authorMetadataOverride)).append("\n");
    sb.append("    viewerUserId: ").append(toIndentedString(viewerUserId)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    viewerDefaultPermissionSet: ").append(toIndentedString(viewerDefaultPermissionSet)).append("\n");
    sb.append("    viewerPermissions: ").append(toIndentedString(viewerPermissions)).append("\n");
    sb.append("    eula: ").append(toIndentedString(eula)).append("\n");
    sb.append("    sidebar: ").append(toIndentedString(sidebar)).append("\n");
    sb.append("    similarity: ").append(toIndentedString(similarity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

